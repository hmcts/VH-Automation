{
  "x-generator": "NSwag v13.10.8.0 (NJsonSchema v10.3.11.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Bookings API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://vh-bookings-api-dev.azurewebsites.net"
    }
  ],
  "paths": {
    "/casetypes": {
      "get": {
        "tags": [
          "CaseTypes"
        ],
        "summary": "Get available case types\n            ",
        "operationId": "GetCaseTypes",
        "responses": {
          "200": {
            "description": "A list of available case types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseTypeResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/casetypes/{caseTypeName}/caseroles": {
      "get": {
        "tags": [
          "CaseTypes"
        ],
        "summary": "Get case roles for a case type",
        "operationId": "GetCaseRolesForCaseType",
        "parameters": [
          {
            "name": "caseTypeName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Available case roles for given case type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CaseRoleResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/casetypes/{caseTypeName}/caseroles/{caseRoleName}/hearingroles": {
      "get": {
        "tags": [
          "CaseTypes"
        ],
        "summary": "Get hearing roles for a case role of a case type",
        "operationId": "GetHearingRolesForCaseRole",
        "parameters": [
          {
            "name": "caseTypeName",
            "in": "path",
            "required": true,
            "description": "Hearing case type",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "caseRoleName",
            "in": "path",
            "required": true,
            "description": "Hearing case role",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Available hearing roles for given case role",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HearingRoleResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/hearings/{hearingId}/endpoints": {
      "post": {
        "tags": [
          "EndPoints"
        ],
        "summary": "Add an endpoint to a given hearing\n            ",
        "operationId": "AddEndPointToHearing",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The hearing id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "addEndpointRequest",
          "description": "Details of the endpoint to be added to a hearing",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEndpointRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/hearings/{hearingId}/endpoints/{endpointId}": {
      "delete": {
        "tags": [
          "EndPoints"
        ],
        "summary": "Removes an endpoint from a given hearing\n            ",
        "operationId": "RemoveEndPointFromHearing",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The hearing id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "description": "The endpoint id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "EndPoints"
        ],
        "summary": "Update an endpoint of a given hearing\n            ",
        "operationId": "UpdateDisplayNameForEndpoint",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The hearing id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "description": "The endpoint id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "updateEndpointRequest",
          "description": "Details of the endpoint to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEndpointRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/feature-flags": {
      "get": {
        "tags": [
          "FeatureFlags"
        ],
        "summary": "returns wheather a feature is enabled or not",
        "operationId": "GetFeatureFlag",
        "parameters": [
          {
            "name": "featureName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "bool",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/HealthCheck/health": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Run a health check of the service\n            ",
        "operationId": "CheckServiceHealth",
        "responses": {
          "200": {
            "description": "Error if fails, otherwise OK status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingsApiHealthResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingsApiHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health/liveness": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Run a health check of the service\n            ",
        "operationId": "CheckServiceHealth2",
        "responses": {
          "200": {
            "description": "Error if fails, otherwise OK status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingsApiHealthResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingsApiHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/hearings/{hearingId}/participants": {
      "get": {
        "tags": [
          "HearingParticipants"
        ],
        "summary": "Get participants in a hearing",
        "operationId": "GetAllParticipantsInHearing",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The Id of the hearing",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of participants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "HearingParticipants"
        ],
        "summary": "Add participant(s) to a hearing",
        "operationId": "AddParticipantsToHearing",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The Id of the hearing",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The participant information to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddParticipantsToHearingRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": "The participant"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/hearings/{hearingId}/participants/{participantId}": {
      "get": {
        "tags": [
          "HearingParticipants"
        ],
        "summary": "Get a single participant in a hearing",
        "operationId": "GetParticipantInHearing",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The Id of the hearing",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "description": "The Id of the participant",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "The participant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParticipantResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HearingParticipants"
        ],
        "summary": "Remove a participant from a hearing",
        "operationId": "RemoveParticipantFromHearing",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "Id of hearing to look up",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "description": "Id of participant to remove",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "HearingParticipants"
        ],
        "summary": "Update participant details",
        "operationId": "UpdateParticipantDetails",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "Id of hearing to look up",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "description": "Id of participant to remove",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The participant information to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParticipantRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/hearings/{hearingId}/updateParticipants": {
      "post": {
        "tags": [
          "HearingParticipants"
        ],
        "summary": "Updates a hearings participants",
        "operationId": "UpdateHearingParticipants",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The Id of the hearing",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The participants information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHearingParticipantsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": "204 No Content"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/hearings/{hearingId}/participants/{participantId}/suitability-answers": {
      "put": {
        "tags": [
          "HearingParticipants"
        ],
        "summary": "Updates suitability answers for the participant",
        "operationId": "UpdateSuitabilityAnswers",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "Id of hearing",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "description": "Id of participant",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "answers",
          "description": "A list of suitability answers to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SuitabilityAnswersRequest"
                }
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Http status"
          }
        }
      }
    },
    "/hearings/{hearingId}": {
      "get": {
        "tags": [
          "Hearings"
        ],
        "summary": "Get details for a given hearing",
        "operationId": "GetHearingDetailsById",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "Id for a hearing",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Hearing details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HearingDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hearings"
        ],
        "summary": "Update the details of a hearing such as venue, time and duration",
        "operationId": "UpdateHearingDetails",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The id of the hearing to update",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "Details to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHearingRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Details of updated hearing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HearingDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hearings"
        ],
        "summary": "Remove an existing hearing",
        "operationId": "RemoveHearing",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The hearing id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Hearings"
        ],
        "summary": "Update booking status",
        "operationId": "UpdateBookingStatus",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "Id of the hearing to update the status for",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "Status of the hearing to change to",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBookingStatusRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": "Success status"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/hearings": {
      "get": {
        "tags": [
          "Hearings"
        ],
        "summary": "Get list of all hearings for a given username",
        "operationId": "GetHearingsByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "username of person to search against",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Hearing details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HearingDetailsResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hearings"
        ],
        "summary": "Request to book a new hearing",
        "operationId": "BookNewHearing",
        "requestBody": {
          "x-name": "request",
          "description": "Details of a new hearing to book",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookNewHearingRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Details of the newly booked hearing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HearingDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/hearings/hearingids/{hearingIds}/anonymise-participant-and-case": {
      "patch": {
        "tags": [
          "Hearings"
        ],
        "summary": "Anonymise participant and case from expired hearing",
        "operationId": "AnonymiseParticipantAndCaseByHearingId",
        "parameters": [
          {
            "name": "hearingIds",
            "in": "path",
            "required": true,
            "description": "hearing ids to anonymise data with",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "hearingIds",
          "description": "hearing ids to anonymise data with",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/hearings/{groupId}/hearings": {
      "get": {
        "tags": [
          "Hearings"
        ],
        "summary": "Get list of all hearings in a group",
        "operationId": "GetHearingsByGroupId",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "the group id of the single day or multi day hearing",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Hearing details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HearingDetailsResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hearings/{hearingId}/clone": {
      "post": {
        "tags": [
          "Hearings"
        ],
        "summary": "Create a new hearing with the details of a given hearing on given dates",
        "operationId": "CloneHearing",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "Original hearing to clone",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "List of dates to create a new hearing on",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneHearingRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/hearings/types": {
      "get": {
        "tags": [
          "Hearings"
        ],
        "summary": "Get a paged list of booked hearings\n            ",
        "operationId": "GetHearingsByTypes",
        "parameters": [
          {
            "name": "types",
            "in": "query",
            "style": "form",
            "explode": true,
            "description": "The hearing case types.",
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-position": 1
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor specifying from which entries to read next page, is defaulted if not specified",
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The max number hearings records to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 3
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The date of which to return hearings on or after. Defaults to UTC Now at Midnight.",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "The list of bookings video hearing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/hearings/anonymisehearings": {
      "patch": {
        "tags": [
          "Hearings"
        ],
        "summary": "Anonymises the Hearings, Case, Person and Participant data.",
        "operationId": "AnonymiseHearings",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/hearings/audiorecording/search": {
      "get": {
        "tags": [
          "Hearings"
        ],
        "summary": "Search for hearings by case number. Search will apply fuzzy matching",
        "operationId": "SearchForHearings",
        "parameters": [
          {
            "name": "CaseNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "list of hearings matching search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AudioRecordedHearingsBySearchResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/hearingvenues": {
      "get": {
        "tags": [
          "HearingVenues"
        ],
        "summary": "Get all hearing venues available for booking",
        "operationId": "GetHearingVenues",
        "responses": {
          "200": {
            "description": "List of hearing venues",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HearingVenueResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/judiciaryperson/BulkJudiciaryPersons": {
      "post": {
        "tags": [
          "JudiciaryPerson"
        ],
        "operationId": "BulkJudiciaryPersons",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JudiciaryPersonRequest"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkJudiciaryPersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/judiciaryperson/BulkJudiciaryLeavers": {
      "post": {
        "tags": [
          "JudiciaryPerson"
        ],
        "operationId": "BulkJudiciaryLeavers",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JudiciaryLeaverRequest"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkJudiciaryLeaverResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/judiciaryperson/search": {
      "post": {
        "tags": [
          "JudiciaryPerson"
        ],
        "summary": "Find persons with the email matching a search term.",
        "operationId": "PostJudiciaryPersonBySearchTerm",
        "requestBody": {
          "x-name": "term",
          "description": "Partial string to match email with, case-insensitive.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTermRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Person list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Participants/username/{username}": {
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "Get a participants by username",
        "operationId": "GetParticipantsByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "The username of the participant",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Participant",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/persons/username/{username}": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Get a person by username",
        "operationId": "GetPersonByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "The username of the person",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/persons/username/hearings": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Get all hearings for a person by username",
        "operationId": "GetHearingsByUsernameForDeletion",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HearingsByUsernameForDeletionResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/persons/contactEmail/{contactEmail}": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Get a person by contact email",
        "operationId": "GetPersonByContactEmail",
        "parameters": [
          {
            "name": "contactEmail",
            "in": "path",
            "required": true,
            "description": "The contact email of the person",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/persons": {
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "Find persons with contact email matching a search term.",
        "operationId": "PostPersonBySearchTerm",
        "requestBody": {
          "x-name": "term",
          "description": "Partial string to match contact email with, case-insensitive.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTermRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Person list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Persons"
        ],
        "operationId": "SearchForNonJudgePersonsByContactEmail",
        "parameters": [
          {
            "name": "contactEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/persons/username/{username}/suitability-answers": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Get a list of suitability answers for a given person",
        "operationId": "GetPersonSuitabilityAnswers",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "The username of the person",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A list of suitability answers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonSuitabilityAnswerResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/persons/userswithclosedhearings": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "Get list of person from the old hearings",
        "operationId": "GetPersonByClosedHearings",
        "responses": {
          "200": {
            "description": "list of usernames",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithClosedConferencesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/persons/getanonymisationdata": {
      "get": {
        "tags": [
          "Persons"
        ],
        "operationId": "GetAnonymisationData",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnonymisationDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/persons/username/{username}/anonymise": {
      "patch": {
        "tags": [
          "Persons"
        ],
        "summary": "Anonymise a person",
        "operationId": "AnonymisePersonWithUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "username of person",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/persons/username/{username}/anonymise-for-expired-hearings": {
      "patch": {
        "tags": [
          "Persons"
        ],
        "summary": "Anonymise a person from expired hearing",
        "operationId": "AnonymisePersonWithUsernameForExpiredHearings",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "username of person",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/persons/{personId}": {
      "put": {
        "tags": [
          "Persons"
        ],
        "summary": "Update the personal details",
        "operationId": "UpdatePersonDetails",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "description": "The id of the person to update",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "payload",
          "description": "Updated details of the person",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePersonDetailsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/staffmember": {
      "get": {
        "tags": [
          "StaffMember"
        ],
        "summary": "Find staff member with contact email matching a search term.",
        "operationId": "GetStaffMemberBySearchTerm",
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "Partial string to match contact email with, case-insensitive.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Person list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/suitability-answers": {
      "get": {
        "tags": [
          "SuitabilityAnswers"
        ],
        "summary": "Get a cursor based list of suitability answers\n            ",
        "operationId": "GetSuitabilityAnswers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "Cursor specifying from which entries to read next page, is defaulted if not specified",
            "schema": {
              "type": "string",
              "default": "0",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The max number hearings records to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "The list of latest suitability answers for participants",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuitabilityAnswersResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CaseTypeResponse": {
        "type": "object",
        "description": "A case type and the hearing types possible\n            ",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The case type display name\n            ",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique identifier\n            ",
            "format": "int32"
          },
          "hearing_types": {
            "type": "array",
            "description": "The hearing types\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/HearingTypeResponse"
            }
          }
        }
      },
      "HearingTypeResponse": {
        "type": "object",
        "description": "A hearing type\n            ",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "The hearing type display name\n            ",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Unique identifier for the hearing type\n            ",
            "format": "int32"
          }
        }
      },
      "CaseRoleResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "user_role": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "HearingRoleResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "user_role": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddEndpointRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EndpointRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "EndpointRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "defence_advocate_username": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateEndpointRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EndpointRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BookingsApiHealthResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "database_health": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HealthCheck"
              }
            ]
          },
          "app_version": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApplicationVersion"
              }
            ]
          }
        }
      },
      "HealthCheck": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "successful": {
            "type": "boolean"
          },
          "error_message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IDictionary"
              }
            ]
          }
        }
      },
      "IDictionary": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Item": {
            "nullable": true
          },
          "Keys": {
            "type": "array",
            "items": {}
          },
          "Values": {
            "type": "array",
            "items": {}
          },
          "IsReadOnly": {
            "type": "boolean"
          },
          "IsFixedSize": {
            "type": "boolean"
          }
        }
      },
      "ApplicationVersion": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "file_version": {
            "type": "string",
            "nullable": true
          },
          "information_version": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ParticipantResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Participant Id\n            ",
            "format": "guid"
          },
          "display_name": {
            "type": "string",
            "description": "Participant Display Name\n            ",
            "nullable": true
          },
          "case_role_name": {
            "type": "string",
            "description": "The name of the participant's case role\n            ",
            "nullable": true
          },
          "hearing_role_name": {
            "type": "string",
            "description": "The name of the participant's hearing role\n            ",
            "nullable": true
          },
          "user_role_name": {
            "type": "string",
            "description": "The name of the participant's user role\n            ",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Participant Title.\n            ",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "Participant first name.\n            ",
            "nullable": true
          },
          "middle_names": {
            "type": "string",
            "description": "Participant middle name.\n            ",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "Participant last name.\n            ",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "description": "Participant contact email\n            ",
            "nullable": true
          },
          "telephone_number": {
            "type": "string",
            "description": "Participant telephone number\n            ",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Participant username\n            ",
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "description": "Gets or sets the organisation name.\n            ",
            "nullable": true
          },
          "representee": {
            "type": "string",
            "description": "Gets or sets the person name that Representative represents.\n            ",
            "nullable": true
          },
          "linked_participants": {
            "type": "array",
            "description": "The participant linked to this participant response\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantResponse"
            }
          }
        }
      },
      "LinkedParticipantResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "linked_id": {
            "type": "string",
            "description": "The linked participant in the response\n            ",
            "format": "guid"
          },
          "type": {
            "description": "The type of the linked participant\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LinkedParticipantType"
              }
            ]
          }
        }
      },
      "LinkedParticipantType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Interpreter"
        ],
        "enum": [
          "Interpreter"
        ]
      },
      "AddParticipantsToHearingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participants": {
            "type": "array",
            "description": "List of participants\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantRequest"
            }
          },
          "linked_participants": {
            "type": "array",
            "description": "List of linked participants\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantRequest"
            }
          }
        }
      },
      "ParticipantRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "description": "Participant Title.\n            ",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "Participant first name.\n            ",
            "nullable": true
          },
          "middle_names": {
            "type": "string",
            "description": "Participant middle name.\n            ",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "Participant last name.\n            ",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "description": "Participant Contact Email\n            ",
            "nullable": true
          },
          "telephone_number": {
            "type": "string",
            "description": "Participant Telephone number\n            ",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Participant Username\n            ",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "description": "Participant Display Name\n            ",
            "nullable": true
          },
          "case_role_name": {
            "type": "string",
            "description": "The name of the participant's case role\n            ",
            "nullable": true
          },
          "hearing_role_name": {
            "type": "string",
            "description": "The name of the participant's hearing role\n            ",
            "nullable": true
          },
          "representee": {
            "type": "string",
            "description": "The representee of a representative\n            ",
            "nullable": true
          },
          "organisation_name": {
            "type": "string",
            "description": "The organisation name\n            ",
            "nullable": true
          }
        }
      },
      "LinkedParticipantRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participant_contact_email": {
            "type": "string",
            "nullable": true
          },
          "linked_participant_contact_email": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/LinkedParticipantType"
          }
        }
      },
      "UpdateHearingParticipantsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "new_participants": {
            "type": "array",
            "description": "List of new participants\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantRequest"
            }
          },
          "existing_participants": {
            "type": "array",
            "description": "List of existing participants\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UpdateParticipantRequest"
            }
          },
          "removed_participant_ids": {
            "type": "array",
            "description": "List of removed participant Ids\n            ",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "linked_participants": {
            "type": "array",
            "description": "List of linked participants\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantRequest"
            }
          }
        }
      },
      "UpdateParticipantRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participant_id": {
            "type": "string",
            "description": "Participant Id.\n            ",
            "format": "guid"
          },
          "title": {
            "type": "string",
            "description": "Participant Title.\n            ",
            "nullable": true
          },
          "telephone_number": {
            "type": "string",
            "description": "Participant Telephone number\n            ",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "description": "Participant Display Name\n            ",
            "nullable": true
          },
          "organisation_name": {
            "type": "string",
            "description": "Participant Organisation\n            ",
            "nullable": true
          },
          "representee": {
            "type": "string",
            "description": "Representee\n            ",
            "nullable": true
          },
          "linked_participants": {
            "type": "array",
            "description": "List of linked participants\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantRequest"
            }
          }
        }
      },
      "SuitabilityAnswersRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "description": "Key used to identify the question",
            "nullable": true
          },
          "answer": {
            "type": "string",
            "description": "Answer the question",
            "nullable": true
          },
          "extended_answer": {
            "type": "string",
            "description": "Extended answer to the question",
            "nullable": true
          }
        }
      },
      "HearingDetailsResponse": {
        "type": "object",
        "description": "Detailed information of a hearing",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Hearing Id\n            ",
            "format": "guid"
          },
          "scheduled_date_time": {
            "type": "string",
            "description": "The date and time for a hearing\n            ",
            "format": "date-time"
          },
          "scheduled_duration": {
            "type": "integer",
            "description": "The duration of a hearing (number of minutes)\n            ",
            "format": "int32"
          },
          "hearing_venue_name": {
            "type": "string",
            "description": "The name of the hearing venue\n            ",
            "nullable": true
          },
          "case_type_name": {
            "type": "string",
            "description": "The name of the case type\n            ",
            "nullable": true
          },
          "hearing_type_name": {
            "type": "string",
            "description": "The name of the hearing type\n            ",
            "nullable": true
          },
          "cases": {
            "type": "array",
            "description": "List of cases associated to the hearing\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CaseResponse"
            }
          },
          "participants": {
            "type": "array",
            "description": "List of participants in hearing\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantResponse"
            }
          },
          "telephone_participants": {
            "type": "array",
            "description": "List of telephone participants in the hearing\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TelephoneParticipantResponse"
            }
          },
          "hearing_room_name": {
            "type": "string",
            "description": "The hearing room name at the hearing venue\n            ",
            "nullable": true
          },
          "other_information": {
            "type": "string",
            "description": "Any other information about the hearing\n            ",
            "nullable": true
          },
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "description": "The VH admin username that created the hearing\n            ",
            "nullable": true
          },
          "updated_by": {
            "type": "string",
            "description": "The last date and time any details for the hearing was updated\n            ",
            "nullable": true
          },
          "updated_date": {
            "type": "string",
            "description": "User id of the who last updated the hearing\n            ",
            "format": "date-time"
          },
          "confirmed_by": {
            "type": "string",
            "description": "The VH admin username that confirmed the hearing\n            ",
            "nullable": true
          },
          "confirmed_date": {
            "type": "string",
            "description": "The date and time when the hearing was confirmed\n            ",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "description": "Gets or sets the booking status of the hearing",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingStatus"
              }
            ]
          },
          "questionnaire_not_required": {
            "type": "boolean",
            "description": "QuestionnaireNotRequired"
          },
          "audio_recording_required": {
            "type": "boolean",
            "description": "Gets or sets the audio recording required flag, value true  is indicated that recording is required, otherwise false"
          },
          "cancel_reason": {
            "type": "string",
            "description": "Gets or sets the hearing cancel reason",
            "nullable": true
          },
          "endpoints": {
            "type": "array",
            "description": "Gets the endpoints for a hearing",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EndpointResponse"
            }
          },
          "group_id": {
            "type": "string",
            "description": "The group id for a hearing",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "CaseResponse": {
        "type": "object",
        "description": "Case Information",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "string",
            "description": "The case number\n            ",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The case name\n            ",
            "nullable": true
          },
          "is_lead_case": {
            "type": "boolean",
            "description": "Is lead case for hearing\n            "
          }
        }
      },
      "TelephoneParticipantResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Participant Id\n            ",
            "format": "guid"
          },
          "case_role_name": {
            "type": "string",
            "description": "The name of the participant's case role\n            ",
            "nullable": true
          },
          "hearing_role_name": {
            "type": "string",
            "description": "The name of the participant's hearing role\n            ",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "Participant first name.\n            ",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "Participant last name.\n            ",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "description": "Participant contact email\n            ",
            "nullable": true
          },
          "telephone_number": {
            "type": "string",
            "description": "Participant telephone number\n            ",
            "nullable": true
          },
          "mobile_number": {
            "type": "string",
            "description": "Participant telephone number\n            ",
            "nullable": true
          },
          "representee": {
            "type": "string",
            "description": "Gets or sets the person name that Representative represents.\n            ",
            "nullable": true
          },
          "linked_participants": {
            "type": "array",
            "description": "The participant linked to this participant response\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantResponse"
            }
          }
        }
      },
      "BookingStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Booked",
          "Created",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Booked",
          "Created",
          "Cancelled",
          "Failed"
        ]
      },
      "EndpointResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "sip": {
            "type": "string",
            "nullable": true
          },
          "pin": {
            "type": "string",
            "nullable": true
          },
          "defence_advocate_id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "BookNewHearingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "scheduled_date_time": {
            "type": "string",
            "description": "The date and time for a hearing\n            ",
            "format": "date-time"
          },
          "scheduled_duration": {
            "type": "integer",
            "description": "The duration of a hearing (number of minutes)\n            ",
            "format": "int32"
          },
          "hearing_venue_name": {
            "type": "string",
            "description": "The name of the hearing venue\n            ",
            "nullable": true
          },
          "case_type_name": {
            "type": "string",
            "description": "The name of the case type\n            ",
            "nullable": true
          },
          "hearing_type_name": {
            "type": "string",
            "description": "The name of the hearing type\n            ",
            "nullable": true
          },
          "cases": {
            "type": "array",
            "description": "List of cases associated to the hearing\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CaseRequest"
            }
          },
          "participants": {
            "type": "array",
            "description": "List of participants in hearing\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantRequest"
            }
          },
          "hearing_room_name": {
            "type": "string",
            "description": "The hearing room name at the hearing venue\n            ",
            "nullable": true
          },
          "other_information": {
            "type": "string",
            "description": "Any other information about the hearing\n            ",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "description": "The VH admin username that created the hearing\n            ",
            "nullable": true
          },
          "questionnaire_not_required": {
            "type": "boolean",
            "description": "QuestionnaireNotRequired"
          },
          "audio_recording_required": {
            "type": "boolean",
            "description": "Gets or sets the audio recording required flag, value true  is indicated that recording is required, otherwise false"
          },
          "endpoints": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EndpointRequest"
            }
          },
          "linked_participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantRequest"
            }
          }
        }
      },
      "CaseRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "number": {
            "type": "string",
            "description": "The case number\n            ",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The case name\n            ",
            "nullable": true
          },
          "is_lead_case": {
            "type": "boolean",
            "description": "Is lead case for hearing\n            "
          }
        }
      },
      "CloneHearingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dates": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "UpdateHearingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "scheduled_date_time": {
            "type": "string",
            "description": "Hearing Schedule Date and Time\n            ",
            "format": "date-time"
          },
          "scheduled_duration": {
            "type": "integer",
            "description": "Duration of the hearing\n            ",
            "format": "int32"
          },
          "hearing_venue_name": {
            "type": "string",
            "description": "The name of the hearing venue",
            "nullable": true
          },
          "hearing_room_name": {
            "type": "string",
            "description": "The hearing room name at the hearing venue\n            ",
            "nullable": true
          },
          "other_information": {
            "type": "string",
            "description": "Any other information about the hearing\n            ",
            "nullable": true
          },
          "cases": {
            "type": "array",
            "description": "List of cases associated to the hearing\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CaseRequest"
            }
          },
          "updated_by": {
            "type": "string",
            "description": "User updated the hearing record\n            ",
            "nullable": true
          },
          "questionnaire_not_required": {
            "type": "boolean",
            "description": "QuestionnaireNotRequired",
            "nullable": true
          },
          "audio_recording_required": {
            "type": "boolean",
            "description": "Gets or sets the audio recording required flag, value true  is indicated that recording is required, otherwise false",
            "nullable": true
          }
        }
      },
      "UpdateBookingStatusRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "updated_by": {
            "type": "string",
            "description": "The user requesting to update the status\n            ",
            "nullable": true
          },
          "status": {
            "description": "New status of the hearing\n            ",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UpdateBookingStatus"
              }
            ]
          },
          "cancel_reason": {
            "type": "string",
            "description": "The reason for cancelling the video hearing",
            "nullable": true
          }
        }
      },
      "UpdateBookingStatus": {
        "type": "string",
        "description": "Booking status to update\n            ",
        "x-enumNames": [
          "Created",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Created",
          "Cancelled",
          "Failed"
        ]
      },
      "BookingsResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedCursorBasedResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "hearings": {
                "type": "array",
                "description": "Gets or sets list of bookings hearings.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/BookingsByDateResponse"
                }
              }
            }
          }
        ]
      },
      "BookingsByDateResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "scheduled_date": {
            "type": "string",
            "description": "The hearings grouped by date without time.",
            "format": "date-time"
          },
          "hearings": {
            "type": "array",
            "description": "Gets or sets list of bookings hearings.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BookingsHearingResponse"
            }
          }
        }
      },
      "BookingsHearingResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hearing_id": {
            "type": "string",
            "description": "Gets or sets the hearing ID.",
            "format": "guid"
          },
          "hearing_number": {
            "type": "string",
            "description": "Gets or sets the hearing number/reference.",
            "nullable": true
          },
          "hearing_name": {
            "type": "string",
            "description": "Gets or sets the hearing title/name.",
            "nullable": true
          },
          "scheduled_date_time": {
            "type": "string",
            "description": "Gets or sets the hearing scheduled date and time.",
            "format": "date-time"
          },
          "scheduled_duration": {
            "type": "integer",
            "description": "Gets or sets the hearing duration.",
            "format": "int32"
          },
          "case_type_name": {
            "type": "string",
            "description": "Gets or sets the name of the case type.",
            "nullable": true
          },
          "hearing_type_name": {
            "type": "string",
            "description": "Gets or sets the hearing case type.",
            "nullable": true
          },
          "court_room": {
            "type": "string",
            "description": "Gets or sets the court room.",
            "nullable": true
          },
          "court_address": {
            "type": "string",
            "description": "Gets or sets the court address.",
            "nullable": true
          },
          "judge_name": {
            "type": "string",
            "description": "Gets or sets Judge name.",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "description": "Gets or sets the name/email person who create the hearing.",
            "nullable": true
          },
          "created_date": {
            "type": "string",
            "description": "Gets or sets the created date of hearing.",
            "format": "date-time"
          },
          "last_edit_by": {
            "type": "string",
            "description": "Gets or sets the name/email person who last edit the hearing.",
            "nullable": true
          },
          "last_edit_date": {
            "type": "string",
            "description": "Gets or sets the last edited date of hearing.",
            "format": "date-time",
            "nullable": true
          },
          "confirmed_by": {
            "type": "string",
            "description": "The VH admin username that confirmed the hearing\n            ",
            "nullable": true
          },
          "confirmed_date": {
            "type": "string",
            "description": "The date and time when the hearing was confirmed\n            ",
            "format": "date-time",
            "nullable": true
          },
          "hearing_date": {
            "type": "string",
            "description": "Gets the scheduled date without time.",
            "format": "date-time"
          },
          "status": {
            "description": "Gets or sets the booking status of the hearing.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingStatus"
              }
            ]
          },
          "questionnaire_not_required": {
            "type": "boolean",
            "description": "QuestionnaireNotRequired"
          },
          "audio_recording_required": {
            "type": "boolean",
            "description": "Gets or sets the audio recording required flag, value true  is indicated that recording is required, otherwise false"
          },
          "cancel_reason": {
            "type": "string",
            "nullable": true
          },
          "group_id": {
            "type": "string",
            "description": "The group id for a hearing",
            "format": "guid",
            "nullable": true
          },
          "court_room_account": {
            "type": "string",
            "description": "Gets or sets Judge/Court account (username).",
            "nullable": true
          }
        }
      },
      "PagedCursorBasedResponse": {
        "type": "object",
        "description": "Base class for paged cursor base pagination responses where each\nresponse represents a next cursor to get data.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "next_cursor": {
            "type": "string",
            "description": "Gets or sets a unique sequential value to get next set of records. \nvalue is set to 0 if no records to return.",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "description": "Gets or sets the maximum number of items returned for the page.",
            "format": "int32"
          },
          "prev_page_url": {
            "type": "string",
            "description": "Absolute url to the previous page of items.\nWill be null for the first page.",
            "nullable": true
          },
          "next_page_url": {
            "type": "string",
            "description": "Absolute url for the next page of items.\nWill be null for the last page.",
            "nullable": true
          }
        }
      },
      "AudioRecordedHearingsBySearchResponse": {
        "type": "object",
        "description": "hearing information queried by case number",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Hearing Id\n            ",
            "format": "guid"
          },
          "scheduled_date_time": {
            "type": "string",
            "description": "The date and time for a hearing\n            ",
            "format": "date-time"
          },
          "hearing_venue_name": {
            "type": "string",
            "description": "The name of the hearing venue\n            ",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "description": "The case number\n            ",
            "nullable": true
          },
          "case_name": {
            "type": "string",
            "description": "The case name\n            ",
            "nullable": true
          },
          "courtroom_account": {
            "type": "string",
            "description": "The courtroom account\n            ",
            "nullable": true
          },
          "courtroom_account_name": {
            "type": "string",
            "description": "The courtroom account name\n            ",
            "nullable": true
          },
          "hearing_room_name": {
            "type": "string",
            "description": "The hearing room name at the hearing venue\n            ",
            "nullable": true
          },
          "group_id": {
            "type": "string",
            "description": "The group id for a hearing",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "HearingVenueResponse": {
        "type": "object",
        "description": "Hearing Venue",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BulkJudiciaryPersonResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errored_requests": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/JudiciaryPersonErrorResponse"
            }
          }
        }
      },
      "JudiciaryPersonErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "judiciary_person_request": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/JudiciaryPersonRequest"
              }
            ]
          }
        }
      },
      "JudiciaryPersonRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "personal_code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "known_as": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "fullname": {
            "type": "string",
            "nullable": true
          },
          "post_nominals": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "has_left": {
            "type": "boolean"
          }
        }
      },
      "BulkJudiciaryLeaverResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errored_requests": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/JudiciaryLeaverErrorResponse"
            }
          }
        }
      },
      "JudiciaryLeaverErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "judiciary_leaver_request": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/JudiciaryLeaverRequest"
              }
            ]
          }
        }
      },
      "JudiciaryLeaverRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "leaver": {
            "type": "boolean"
          },
          "left_on": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PersonResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Participant Id\n            ",
            "format": "guid"
          },
          "title": {
            "type": "string",
            "description": "Participant Title.\n            ",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "Participant first name.\n            ",
            "nullable": true
          },
          "middle_names": {
            "type": "string",
            "description": "Participant middle name.\n            ",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "Participant last name.\n            ",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "description": "Participant contact email\n            ",
            "nullable": true
          },
          "telephone_number": {
            "type": "string",
            "description": "Participant telephone number\n            ",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Participant username\n            ",
            "nullable": true
          },
          "organisation": {
            "type": "string",
            "description": "Organisation of representative\n            ",
            "nullable": true
          }
        }
      },
      "SearchTermRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "term": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HearingsByUsernameForDeletionResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hearing_id": {
            "type": "string",
            "format": "guid"
          },
          "scheduled_date_time": {
            "type": "string",
            "format": "date-time"
          },
          "case_name": {
            "type": "string",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "venue": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PersonSuitabilityAnswerResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hearing_id": {
            "type": "string",
            "format": "guid"
          },
          "participant_id": {
            "type": "string",
            "format": "guid"
          },
          "scheduled_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "questionnaire_not_required": {
            "type": "boolean"
          },
          "answers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SuitabilityAnswerResponse"
            }
          }
        }
      },
      "SuitabilityAnswerResponse": {
        "type": "object",
        "description": "Suitability Answer Response Object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "description": "Key used to identify the question",
            "nullable": true
          },
          "answer": {
            "type": "string",
            "description": "Answer the question",
            "nullable": true
          },
          "extended_answer": {
            "type": "string",
            "description": "Extended answer to the question",
            "nullable": true
          }
        }
      },
      "UserWithClosedConferencesResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "usernames": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AnonymisationDataResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "usernames": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "hearing_ids": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "UpdatePersonDetailsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Participant first name.\n            ",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "Participant last name.\n            ",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Participant Username\n            ",
            "nullable": true
          }
        }
      },
      "SuitabilityAnswersResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedCursorBasedResponse"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "participant_suitability_answer_response": {
                "type": "array",
                "description": "Gets or sets a list of participants suitability answers.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ParticipantSuitabilityAnswerResponse"
                }
              }
            }
          }
        ]
      },
      "ParticipantSuitabilityAnswerResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participant_id": {
            "type": "string",
            "description": "Gets or sets the participant ID\n            ",
            "format": "guid"
          },
          "case_number": {
            "type": "string",
            "description": "Gets or sets the hearing case number\n            ",
            "nullable": true
          },
          "hearing_role": {
            "type": "string",
            "description": "Gets or sets the participant hearing role\n            ",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Gets or sets the participant title\n            ",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "Gets or sets the participant first name\n            ",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "Gets or sets the participant last name\n            ",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "description": "Last updated date and time of the suitability answers\n            ",
            "format": "date-time"
          },
          "representee": {
            "type": "string",
            "description": "Gets or sets the name of represented person\n            ",
            "nullable": true
          },
          "answers": {
            "type": "array",
            "description": "List of answers\n            ",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SuitabilityAnswerResponse"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}