{
  "x-generator": "NSwag v13.10.8.0 (NJsonSchema v10.3.11.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Video API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://vh-video-api-dev.azurewebsites.net"
    }
  ],
  "paths": {
    "/conferences/audioapplications/{hearingId}": {
      "get": {
        "tags": [
          "AudioRecording"
        ],
        "summary": "Gets the audio application info for the conference by hearingId",
        "operationId": "GetAudioApplication",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The HearingRefId of the conference to retrieve the audio application info",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioApplicationInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AudioRecording"
        ],
        "summary": "Creates the audio application for the conference by hearingId",
        "operationId": "CreateAudioApplication",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The HearingRefId of the conference to create the audio application info",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "402": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AudioRecording"
        ],
        "summary": "Deletes the audio application for the conference by hearingId",
        "operationId": "DeleteAudioApplication",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The HearingRefId of the conference to stop the audio recording application",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/audiostreams/{hearingId}": {
      "get": {
        "tags": [
          "AudioRecording"
        ],
        "summary": "Gets the audio stream for the conference by hearingId",
        "operationId": "GetAudioStreamInfo",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The HearingRefId of the conference to get the audio recording stream",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "AudioStreamInfoResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioStreamInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/audiostreams/{hearingId}/monitoring": {
      "get": {
        "tags": [
          "AudioRecording"
        ],
        "summary": "Gets the audio stream for monitoring the conference by hearingId",
        "operationId": "GetAudioStreamMonitoringInfo",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The HearingRefId of the conference to monitor the audio recording stream",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "AudioStreamInfoResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioStreamMonitoringInfo"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/audio/{hearingId}": {
      "get": {
        "tags": [
          "AudioRecording"
        ],
        "summary": "Get the audio recording link for a given hearing.",
        "operationId": "GetAudioRecordingLink",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "description": "The hearing id.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "AudioRecordingResponse with the link - AudioFileLink",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioRecordingResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/audio/cvp/all/{cloudRoom}/{date}/{caseReference}": {
      "get": {
        "tags": [
          "AudioRecording"
        ],
        "summary": "Get the audio recording links for a given CVP recording.",
        "operationId": "GetAudioRecordingLinkAllCvp",
        "parameters": [
          {
            "name": "cloudRoom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "caseReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CvpAudioFileResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/audio/cvp/cloudroom/{cloudRoom}/{date}": {
      "get": {
        "tags": [
          "AudioRecording"
        ],
        "summary": "Get the audio recording links for a given CVP recording.",
        "operationId": "GetAudioRecordingLinkCvpByCloudRoom",
        "parameters": [
          {
            "name": "cloudRoom",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CvpAudioFileResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/audio/cvp/date/{date}/{caseReference}": {
      "get": {
        "tags": [
          "AudioRecording"
        ],
        "summary": "Get the audio recording links for a given CVP recording.",
        "operationId": "GetAudioRecordingLinkCvpByDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "caseReference",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CvpAudioFileResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences": {
      "post": {
        "tags": [
          "Conference"
        ],
        "summary": "Request to book a conference",
        "operationId": "BookNewConference",
        "requestBody": {
          "x-name": "request",
          "description": "Details of a conference",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookNewConferenceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Details of the new conference",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Conference"
        ],
        "summary": "Updates a conference",
        "operationId": "UpdateConference",
        "requestBody": {
          "x-name": "request",
          "description": "Details of a conference",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConferenceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Ok status"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get the details of a conference",
        "operationId": "GetConferenceDetailsById",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "Id of the conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Full details including participants and statuses of a conference",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Conference"
        ],
        "summary": "Remove an existing conference",
        "operationId": "RemoveConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The conference id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/today/vho": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get today's conferences by HearingVenueName",
        "operationId": "GetConferencesTodayForAdminByHearingVenueName",
        "parameters": [
          {
            "name": "HearingVenueNames",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Conference details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConferenceForAdminResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conferences/today/staff-member": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get today's conferences by HearingVenueName for staff members",
        "operationId": "GetConferencesTodayForStaffMemberByHearingVenueName",
        "parameters": [
          {
            "name": "HearingVenueNames",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Conference details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConferenceForHostResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conferences/today/judge": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get all conferences for a judge",
        "operationId": "GetConferencesTodayForJudgeByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "judge username",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of conferences for judge",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConferenceForHostResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/today/host": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get all conferences for a host",
        "operationId": "GetConferencesTodayForHost",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Host username",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of conferences for host",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConferenceForHostResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/today/individual": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get non-closed conferences for a participant by their username",
        "operationId": "GetConferencesTodayForIndividualByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "person username",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of non-closed conferences for judge",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConferenceForIndividualResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/hearings/{hearingRefId}": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get conferences by hearing ref id",
        "operationId": "GetConferenceByHearingRefId",
        "parameters": [
          {
            "name": "hearingRefId",
            "in": "path",
            "required": true,
            "description": "Hearing ID",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "includeClosed",
            "in": "query",
            "description": "Include closed conferences in search",
            "schema": {
              "type": "boolean",
              "default": false,
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Full details including participants and statuses of a conference",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/expired": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get list of expired conferences ",
        "operationId": "GetExpiredOpenConferences",
        "responses": {
          "200": {
            "description": "Conference summary details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpiredConferencesResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conferences/audiorecording/expired": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get list of expired conferences that have audiorecording option on",
        "operationId": "GetExpiredAudiorecordingConferences",
        "responses": {
          "200": {
            "description": "List of expired conferences",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpiredConferencesResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/close": {
      "put": {
        "tags": [
          "Conference"
        ],
        "summary": "Close a conference, set its state to closed",
        "operationId": "CloseConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "conference id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "204": {
            "description": "No Content status"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/today/judgesinhearings": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get today's conferences where judges are in hearings",
        "operationId": "GetJudgesInHearingsToday",
        "responses": {
          "200": {
            "description": "Conference details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantInHearingResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conferences/today/hostsinhearings": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get today's conferences where hosts are in hearings",
        "operationId": "GetHostsInHearingsToday",
        "responses": {
          "200": {
            "description": "Conference details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantInHearingResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conferences/hearingRooms": {
      "get": {
        "tags": [
          "Conference"
        ],
        "summary": "Get conferences Hearing rooms",
        "operationId": "GetConferencesHearingRooms",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Hearing rooms details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConferenceHearingRoomsResponse"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Hearing rooms details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/anonymiseconferences": {
      "patch": {
        "tags": [
          "Conference"
        ],
        "summary": "Anonymises the Conference and Participant data.",
        "operationId": "AnonymiseConferences",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/conferences/expiredHearbeats": {
      "delete": {
        "tags": [
          "Conference"
        ],
        "operationId": "RemoveHeartbeatsForConferences",
        "responses": {
          "204": {
            "description": ""
          }
        }
      }
    },
    "/conferences/anonymise-conference-with-hearing-ids": {
      "patch": {
        "tags": [
          "Conference"
        ],
        "summary": "Anonymise conference with matching hearing ids",
        "operationId": "AnonymiseConferenceWithHearingIds",
        "requestBody": {
          "x-name": "request",
          "description": "hearing ids of expired conferences",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnonymiseConferenceWithHearingIdsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/conferences/Wowza/ReconcileAudioFilesInStorage": {
      "get": {
        "tags": [
          "Conference"
        ],
        "operationId": "ReconcileAudioFilesInStorage",
        "parameters": [
          {
            "name": "FileNamePrefix",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "FilesCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "204": {
            "description": ""
          }
        }
      }
    },
    "/conferences/{conferenceId}/start": {
      "post": {
        "tags": [
          "Conference Management"
        ],
        "summary": "Start or resume a video hearing",
        "operationId": "StartOrResumeVideoHearing",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "conference id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartHearingRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": "No Content status"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/pause": {
      "post": {
        "tags": [
          "Conference Management"
        ],
        "summary": "Pause a video hearing",
        "operationId": "PauseVideoHearing",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "conference id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "202": {
            "description": "No Content status"
          }
        }
      }
    },
    "/conferences/{conferenceId}/end": {
      "post": {
        "tags": [
          "Conference Management"
        ],
        "summary": "End a video hearing",
        "operationId": "EndVideoHearing",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "conference id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "202": {
            "description": "No Content status"
          }
        }
      }
    },
    "/conferences/{conferenceId}/suspend": {
      "post": {
        "tags": [
          "Conference Management"
        ],
        "summary": "            Request technical assistance. This will suspend a hearing.\t\n            ",
        "operationId": "SuspendHearing",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "conference id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "202": {
            "description": "No Content status"
          }
        }
      }
    },
    "/conferences/{conferenceId}/transfer": {
      "post": {
        "tags": [
          "Conference Management"
        ],
        "summary": "Transfer a participant in or out of a hearing",
        "operationId": "TransferParticipant",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "Id for conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "transferRequest",
          "description": "Participant and direction of transfer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferParticipantRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "202": {
            "description": ""
          }
        }
      }
    },
    "/consultations": {
      "post": {
        "tags": [
          "Consultation"
        ],
        "summary": "Raise or answer to a private consultation request with another participant",
        "operationId": "RespondToConsultationRequestAsync",
        "requestBody": {
          "x-name": "request",
          "description": "Private consultation request with or without an answer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsultationRequestResponse"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/consultations/endpoint": {
      "post": {
        "tags": [
          "Consultation"
        ],
        "summary": "Add an endpoint to a private consultation",
        "operationId": "JoinEndpointToConsultation",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndpointConsultationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/consultations/lockroom": {
      "post": {
        "tags": [
          "Consultation"
        ],
        "operationId": "LockRoom",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LockRoomRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/consultations/createconsultation": {
      "post": {
        "tags": [
          "Consultation"
        ],
        "operationId": "CreatePrivateConsultation",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartConsultationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/consultations/start": {
      "post": {
        "tags": [
          "Consultation"
        ],
        "operationId": "StartPrivateConsultation",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartConsultationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "202": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/consultations/leave": {
      "post": {
        "tags": [
          "Consultation"
        ],
        "summary": "Leave a consultation",
        "operationId": "LeaveConsultation",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaveConsultationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/endpoints": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Get all endpoints for a conference",
        "operationId": "GetEndpointsForConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "Id of the conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of endpoints",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Add an endpoint to a conference",
        "operationId": "AddEndpointToConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "Id of conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "Endpoint details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEndpointRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/endpoints/{sipAddress}": {
      "delete": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Remove an endpoint from a conference",
        "operationId": "RemoveEndpointFromConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "sipAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EndpointResponse"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Update an endpoint's display name or assign the defence advocate",
        "operationId": "UpdateDisplayNameForEndpoint",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "the conference id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "sipAddress",
            "in": "path",
            "required": true,
            "description": "the endpoint sip address to be updated",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "the updated values of an endpoint",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEndpointRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "an OK status"
          }
        }
      }
    },
    "/HealthCheck/health": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Check Service Health",
        "operationId": "CheckServiceHealth",
        "responses": {
          "200": {
            "description": "Error if fails, otherwise OK status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health/liveness": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "summary": "Check Service Health",
        "operationId": "CheckServiceHealth2",
        "responses": {
          "200": {
            "description": "Error if fails, otherwise OK status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/instantmessages": {
      "get": {
        "tags": [
          "InstantMessage"
        ],
        "summary": "Get all the chat messages for a conference",
        "operationId": "GetInstantMessageHistory",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "Id of the conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Chat messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstantMessageResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "InstantMessage"
        ],
        "summary": "Saves chat message exchanged between participants",
        "operationId": "AddInstantMessageToConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "Id of the conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "Details of the chat message",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddInstantMessageRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "OK if the message is saved successfully"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InstantMessage"
        ],
        "operationId": "RemoveInstantMessages",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/instantMessages/{participantUsername}": {
      "get": {
        "tags": [
          "InstantMessage"
        ],
        "summary": "Get all the chat messages for a conference",
        "operationId": "GetInstantMessageHistoryForParticipant",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "Id of the conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantUsername",
            "in": "path",
            "required": true,
            "description": "instant messages for the participant user name",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "Chat messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstantMessageResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/expiredIM": {
      "get": {
        "tags": [
          "InstantMessage"
        ],
        "summary": "Get list of closed conferences with instant messages (closed over 30 minutes ago)",
        "operationId": "GetClosedConferencesWithInstantMessages",
        "responses": {
          "200": {
            "description": "List of Conference Ids",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClosedConferencesResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/participants": {
      "put": {
        "tags": [
          "Participants"
        ],
        "summary": "Add participants to a conference",
        "operationId": "AddParticipantsToConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The id of the conference to add participants to",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "Details of the participant",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddParticipantsToConferenceRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "Get a list of participants for a given conference Id",
        "operationId": "GetParticipantsByConferenceId",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The conference Id",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list of participants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantSummaryResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/UpdateConferenceParticipants": {
      "patch": {
        "tags": [
          "Participants"
        ],
        "summary": "Update a conference's participants",
        "operationId": "UpdateConferenceParticipants",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "Id of conference to look up",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "Information about the participants",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConferenceParticipantsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/participants/{participantId}": {
      "patch": {
        "tags": [
          "Participants"
        ],
        "summary": "Update participant details",
        "operationId": "UpdateParticipantDetails",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "Id of conference to look up",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "description": "Id of participant to remove",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The participant information to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateParticipantRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Participants"
        ],
        "summary": "Remove participants from a conference",
        "operationId": "RemoveParticipantFromConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The id of the conference to remove participants from",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "description": "The id of the participant to remove",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/participants/{participantId}/selftestresult": {
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "Get the test call result for a participant",
        "operationId": "GetTestCallResultForParticipant",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The id of the conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "description": "The id of the participant",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCallScoreResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/independentselftestresult": {
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "Retrieves the independent self test result without saving it",
        "operationId": "GetIndependentTestCallResult",
        "parameters": [
          {
            "name": "participantId",
            "in": "query",
            "description": "The id of the participant",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestCallScoreResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/participant/{participantId}/heartbeatrecent": {
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "Get the Heartbeat Data For Participant",
        "operationId": "GetHeartbeatDataForParticipant",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The id of the conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "description": "The id of the participant",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ParticipantHeartbeatResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/participant/{participantId}/heartbeat": {
      "post": {
        "tags": [
          "Participants"
        ],
        "summary": "Post the Heartbeat Data For Participant",
        "operationId": "SaveHeartbeatDataForParticipant",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The id of the conference",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "description": "The id of the participant",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "The AddHeartbeatRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddHeartbeatRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/participants/Judge/firstname": {
      "get": {
        "tags": [
          "Participants"
        ],
        "summary": "Get a list of distinct first name of judges",
        "operationId": "GetDistinctJudgeNames",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JudgeNameListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/staffMember": {
      "put": {
        "tags": [
          "Participants"
        ],
        "summary": "Add staff member to a conference",
        "operationId": "AddStaffMemberToConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The id of the conference to add participants to",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "description": "Details of the participant",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStaffMemberRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddStaffMemberResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/username/{username}/anonymise-participant": {
      "patch": {
        "tags": [
          "Participants"
        ],
        "summary": "Anonymise a participant with specified username",
        "operationId": "AnonymiseParticipantWithUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "username of participant",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/conferences/anonymise-quick-link-participant-with-hearing-ids": {
      "patch": {
        "tags": [
          "Participants"
        ],
        "summary": "Anonymise a participant with associated expired conference",
        "operationId": "AnonymiseQuickLinkParticipantWithHearingIds",
        "requestBody": {
          "x-name": "request",
          "description": "hearing ids of expired conferences",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnonymiseQuickLinkParticipantWithHearingIdsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/quickjoin/ValidateQuickLink/{hearingId}": {
      "get": {
        "tags": [
          "QuickLinks"
        ],
        "operationId": "ValidateQuickLink",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/quickjoin/AddQuickLinkParticipant/{hearingId}": {
      "post": {
        "tags": [
          "QuickLinks"
        ],
        "operationId": "AddQuickLinkParticipant",
        "parameters": [
          {
            "name": "hearingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "quickLinkParticipantRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddQuickLinkParticipantRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddQuickLinkParticipantResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/quickjoin/GetQuickLinkParticipantByUserName/{userName}": {
      "get": {
        "tags": [
          "QuickLinks"
        ],
        "operationId": "GetQuickLinkParticipantByUserName",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParticipantSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParticipantSummaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/selftest": {
      "get": {
        "tags": [
          "SelfTest"
        ],
        "summary": "Get the pexip service configuration.",
        "operationId": "GetPexipServicesConfiguration",
        "responses": {
          "200": {
            "description": "Returns the pexip node",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PexipConfigResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get tasks for a conference",
        "operationId": "GetTasksForConference",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The id of the conference to retrieve tasks from",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/tasks/{taskId}": {
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update existing tasks",
        "operationId": "UpdateTaskStatus",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The id of the conference to update",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "description": "The id of the task to update",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "updateTaskRequest",
          "description": "username of who completed the task",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "404": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/conferences/{conferenceId}/task": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Adds a task (alert) for a participant in the conference.",
        "operationId": "AddTask",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "description": "The conference Id to add the task",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "addTaskRequest",
          "description": "The task request containing the task type and the alert (task name)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTaskRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "400": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        }
      }
    },
    "/events": {
      "post": {
        "tags": [
          "VideoEvents"
        ],
        "summary": "Accepts video conference events and publishes to internal clients/services",
        "operationId": "RaiseVideoEvent",
        "requestBody": {
          "x-name": "request",
          "description": "Details of the event",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConferenceEventRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "NoContent if event is handled as expected"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/rooms/interpreter/{participantId}": {
      "get": {
        "tags": [
          "VirtualRoom"
        ],
        "summary": "Get a civilian VMR or return an existing one for a participant",
        "operationId": "GetInterpreterRoomForParticipant",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedParticipantRoomResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/rooms/witness/{participantId}": {
      "get": {
        "tags": [
          "VirtualRoom"
        ],
        "summary": "Get a witness VMR or return an existing one for a participant",
        "operationId": "GetWitnessRoomForParticipant",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedParticipantRoomResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{conferenceId}/rooms/judicial/{participantId}": {
      "get": {
        "tags": [
          "VirtualRoom"
        ],
        "summary": "Get a judicial office holder VMR or return an existing one for a participant",
        "operationId": "GetJudicialRoomForParticipant",
        "parameters": [
          {
            "name": "conferenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedParticipantRoomResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AudioApplicationInfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stream_config": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AudioApplicationStreamConfigResponse"
              }
            ]
          },
          "server_name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AudioApplicationStreamConfigResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "stream_type": {
            "type": "string",
            "nullable": true
          },
          "storage_dir_exists": {
            "type": "boolean"
          },
          "key_dir": {
            "type": "string",
            "nullable": true
          },
          "server_name": {
            "type": "string",
            "nullable": true
          },
          "storage_dir": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {}
          }
        }
      },
      "AudioStreamInfoResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "instance_name": {
            "type": "string",
            "nullable": true
          },
          "server_name": {
            "type": "string",
            "nullable": true
          },
          "recorder_name": {
            "type": "string",
            "nullable": true
          },
          "current_size": {
            "type": "integer",
            "format": "int32"
          },
          "output_path": {
            "type": "string",
            "nullable": true
          },
          "current_file": {
            "type": "string",
            "nullable": true
          },
          "application_name": {
            "type": "string",
            "nullable": true
          },
          "recorder_error_string": {
            "type": "string",
            "nullable": true
          },
          "base_file": {
            "type": "string",
            "nullable": true
          },
          "segment_duration": {
            "type": "integer",
            "format": "int32"
          },
          "recording_start_time": {
            "type": "string",
            "nullable": true
          },
          "current_duration": {
            "type": "integer",
            "format": "int32"
          },
          "file_format": {
            "type": "string",
            "nullable": true
          },
          "recorder_state": {
            "type": "string",
            "nullable": true
          },
          "option": {
            "type": "string",
            "nullable": true
          },
          "is_recording": {
            "type": "boolean"
          }
        }
      },
      "AudioStreamMonitoringInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "application_instance": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "server_name": {
            "type": "string",
            "nullable": true
          },
          "uptime": {
            "type": "integer",
            "format": "int32"
          },
          "bytes_in": {
            "type": "integer",
            "format": "int32"
          },
          "bytes_in_rate": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AudioRecordingResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "audio_file_links": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CvpAudioFileResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "file_name": {
            "type": "string",
            "nullable": true
          },
          "sas_token_url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ConferenceDetailsResponse": {
        "type": "object",
        "description": "Detailed information for a conference",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The conference's UUID",
            "format": "guid"
          },
          "hearing_id": {
            "type": "string",
            "description": "The UUID of the booking",
            "format": "guid"
          },
          "scheduled_date_time": {
            "type": "string",
            "description": "The scheduled start time of a conference",
            "format": "date-time"
          },
          "started_date_time": {
            "type": "string",
            "description": "The time a conference started (not resumed)",
            "format": "date-time",
            "nullable": true
          },
          "closed_date_time": {
            "type": "string",
            "description": "The time a conference was closed",
            "format": "date-time",
            "nullable": true
          },
          "case_type": {
            "type": "string",
            "description": "The case type",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "description": "The case number",
            "nullable": true
          },
          "case_name": {
            "type": "string",
            "description": "The case name",
            "nullable": true
          },
          "scheduled_duration": {
            "type": "integer",
            "description": "The scheduled duration of a conference in minutes",
            "format": "int32"
          },
          "current_status": {
            "description": "The current conference status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConferenceState"
              }
            ]
          },
          "participants": {
            "type": "array",
            "description": "List of participants in conference",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantDetailsResponse"
            }
          },
          "endpoints": {
            "type": "array",
            "description": "List of endpoints in conference",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EndpointResponse"
            }
          },
          "meeting_room": {
            "description": "The Kinly meeting room details",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MeetingRoomResponse"
              }
            ]
          },
          "hearing_venue_name": {
            "type": "string",
            "nullable": true
          },
          "audio_recording_required": {
            "type": "boolean",
            "description": "The option to indicate hearing audio recording"
          },
          "civilian_rooms": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CivilianRoomResponse"
            }
          },
          "hearing_venue_is_scottish": {
            "type": "boolean",
            "description": "Flags true when hearing venue is in Scotland"
          }
        }
      },
      "ConferenceState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NotStarted",
          "InSession",
          "Paused",
          "Suspended",
          "Closed"
        ],
        "enum": [
          "NotStarted",
          "InSession",
          "Paused",
          "Suspended",
          "Closed"
        ]
      },
      "ParticipantDetailsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The participant's UUID",
            "format": "guid"
          },
          "ref_id": {
            "type": "string",
            "description": "The UUID for a participant within Bookings",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "description": "The full name of a participant",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "The first name of a participant",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The last name of a participant",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "description": "The participant contact email",
            "nullable": true
          },
          "contact_telephone": {
            "type": "string",
            "description": "The participant contact telephone",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "description": "The display name",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "The username",
            "nullable": true
          },
          "user_role": {
            "description": "The role of a user",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ]
          },
          "case_type_group": {
            "type": "string",
            "description": "The group participant belongs to (e.g. Claimant of Defendant)",
            "nullable": true
          },
          "hearing_role": {
            "type": "string",
            "description": "The hearing role for a participant",
            "nullable": true
          },
          "representee": {
            "type": "string",
            "description": "The representee (if participant is a representative)",
            "nullable": true
          },
          "current_status": {
            "description": "The current participant status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ParticipantState"
              }
            ]
          },
          "current_room": {
            "description": "Current consultation room details",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RoomResponse"
              }
            ]
          },
          "current_interpreter_room": {
            "description": "Current interpreter room details",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RoomResponse"
              }
            ]
          },
          "linked_participants": {
            "type": "array",
            "description": "Linked Participants - example interpreter and \"interpretee\"",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantResponse"
            }
          }
        }
      },
      "UserRole": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "CaseAdmin",
          "VideoHearingsOfficer",
          "HearingFacilitationSupport",
          "Judge",
          "Individual",
          "Representative",
          "JudicialOfficeHolder",
          "QuickLinkParticipant",
          "QuickLinkObserver",
          "StaffMember"
        ],
        "enum": [
          "None",
          "CaseAdmin",
          "VideoHearingsOfficer",
          "HearingFacilitationSupport",
          "Judge",
          "Individual",
          "Representative",
          "JudicialOfficeHolder",
          "QuickLinkParticipant",
          "QuickLinkObserver",
          "StaffMember"
        ]
      },
      "ParticipantState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "NotSignedIn",
          "Joining",
          "Available",
          "InHearing",
          "InConsultation",
          "Disconnected"
        ],
        "enum": [
          "None",
          "NotSignedIn",
          "Joining",
          "Available",
          "InHearing",
          "InConsultation",
          "Disconnected"
        ]
      },
      "RoomResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "description": "The room ID",
            "format": "int64"
          },
          "label": {
            "type": "string",
            "description": "The room label",
            "nullable": true
          },
          "locked": {
            "type": "boolean",
            "description": "Is the room locked"
          }
        }
      },
      "LinkedParticipantResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "linked_id": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "$ref": "#/components/schemas/LinkedParticipantType"
          }
        }
      },
      "LinkedParticipantType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Interpreter"
        ],
        "enum": [
          "Interpreter"
        ]
      },
      "EndpointResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The endpoint id",
            "format": "guid"
          },
          "display_name": {
            "type": "string",
            "description": "The endpoint display name",
            "nullable": true
          },
          "sip_address": {
            "type": "string",
            "description": "The endpoint sip address",
            "nullable": true
          },
          "pin": {
            "type": "string",
            "description": "The endpoint pin",
            "nullable": true
          },
          "status": {
            "description": "The current endpoint status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EndpointState"
              }
            ]
          },
          "defence_advocate": {
            "type": "string",
            "description": "The defence advocate",
            "nullable": true
          },
          "current_room": {
            "description": "Current consultation room details",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RoomResponse"
              }
            ]
          }
        }
      },
      "EndpointState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NotYetJoined",
          "Connected",
          "Disconnected",
          "InConsultation"
        ],
        "enum": [
          "NotYetJoined",
          "Connected",
          "Disconnected",
          "InConsultation"
        ]
      },
      "MeetingRoomResponse": {
        "type": "object",
        "description": "Represents the meeting room",
        "additionalProperties": false,
        "properties": {
          "admin_uri": {
            "type": "string",
            "description": "The iFrame uri for the video hearings officer",
            "nullable": true
          },
          "judge_uri": {
            "type": "string",
            "description": "The iFrame uri for the judge",
            "nullable": true
          },
          "participant_uri": {
            "type": "string",
            "description": "The meeting uri for participants",
            "nullable": true
          },
          "pexip_node": {
            "type": "string",
            "description": "The Pexip node to connect to",
            "nullable": true
          },
          "pexip_self_test_node": {
            "type": "string",
            "description": "The pexip node to connect to for self test",
            "nullable": true
          },
          "telephone_conference_id": {
            "type": "string",
            "description": "Public switched telephone network pin",
            "nullable": true
          }
        }
      },
      "CivilianRoomResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "BookNewConferenceRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hearing_ref_id": {
            "type": "string",
            "format": "guid"
          },
          "case_type": {
            "type": "string",
            "nullable": true
          },
          "scheduled_date_time": {
            "type": "string",
            "format": "date-time"
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "case_name": {
            "type": "string",
            "nullable": true
          },
          "scheduled_duration": {
            "type": "integer",
            "format": "int32"
          },
          "participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantRequest"
            }
          },
          "hearing_venue_name": {
            "type": "string",
            "nullable": true
          },
          "audio_recording_required": {
            "type": "boolean"
          },
          "endpoints": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AddEndpointRequest"
            }
          }
        }
      },
      "ParticipantRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "participant_ref_id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "nullable": true
          },
          "contact_telephone": {
            "type": "string",
            "nullable": true
          },
          "user_role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "hearing_role": {
            "type": "string",
            "nullable": true
          },
          "case_type_group": {
            "type": "string",
            "nullable": true
          },
          "representee": {
            "type": "string",
            "nullable": true
          },
          "linked_participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantRequest"
            }
          }
        }
      },
      "LinkedParticipantRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participant_ref_id": {
            "type": "string",
            "format": "guid"
          },
          "linked_ref_id": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "$ref": "#/components/schemas/LinkedParticipantType"
          }
        }
      },
      "AddEndpointRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "display_name": {
            "type": "string",
            "description": "The display name for an endpoint",
            "nullable": true
          },
          "sip_address": {
            "type": "string",
            "description": "The sip address to connect via",
            "nullable": true
          },
          "pin": {
            "type": "string",
            "description": "The pin",
            "nullable": true
          },
          "defence_advocate": {
            "type": "string",
            "description": "Username of a defence advocate",
            "nullable": true
          }
        }
      },
      "UpdateConferenceRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hearing_ref_id": {
            "type": "string",
            "format": "guid"
          },
          "case_type": {
            "type": "string",
            "nullable": true
          },
          "scheduled_date_time": {
            "type": "string",
            "format": "date-time"
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "case_name": {
            "type": "string",
            "nullable": true
          },
          "scheduled_duration": {
            "type": "integer",
            "format": "int32"
          },
          "hearing_venue_name": {
            "type": "string",
            "nullable": true
          },
          "audio_recording_required": {
            "type": "boolean"
          }
        }
      },
      "ConferenceForAdminResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "scheduled_date_time": {
            "type": "string",
            "format": "date-time"
          },
          "started_date_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "closed_date_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "case_type": {
            "type": "string",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "nullable": true
          },
          "case_name": {
            "type": "string",
            "nullable": true
          },
          "scheduled_duration": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/ConferenceState"
          },
          "participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantSummaryResponse"
            }
          },
          "hearing_ref_id": {
            "type": "string",
            "format": "guid"
          },
          "hearing_venue_name": {
            "type": "string",
            "nullable": true
          },
          "telephone_conference_id": {
            "type": "string",
            "nullable": true
          },
          "telephone_conference_numbers": {
            "type": "string",
            "nullable": true
          },
          "created_date_time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ParticipantSummaryResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The participant id",
            "format": "guid"
          },
          "username": {
            "type": "string",
            "description": "The participant username",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "description": "The participant display name",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "The participant first name",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "The participant last name",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "description": "The participant contact email",
            "nullable": true
          },
          "contact_telephone": {
            "type": "string",
            "description": "The participant contact telephone",
            "nullable": true
          },
          "status": {
            "description": "The current participant status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ParticipantState"
              }
            ]
          },
          "user_role": {
            "description": "The participant role in conference",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ]
          },
          "hearing_role": {
            "type": "string",
            "description": "The participant hearing role in conference",
            "nullable": true
          },
          "representee": {
            "type": "string",
            "description": "The representee (if participant is a representative)",
            "nullable": true
          },
          "case_group": {
            "type": "string",
            "description": "The group a participant belongs to",
            "nullable": true
          },
          "current_room": {
            "description": "Current consultation room details",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RoomResponse"
              }
            ]
          },
          "current_interpreter_room": {
            "description": "Current interpreter room details",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RoomResponse"
              }
            ]
          },
          "linked_participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantResponse"
            }
          }
        }
      },
      "ConferenceForHostResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Conference UUID",
            "format": "guid"
          },
          "scheduled_date_time": {
            "type": "string",
            "description": "Scheduled date time as UTC",
            "format": "date-time"
          },
          "closed_date_time": {
            "type": "string",
            "description": "The time a conference was closed",
            "format": "date-time",
            "nullable": true
          },
          "scheduled_duration": {
            "type": "integer",
            "description": "The scheduled duration in minutes",
            "format": "int32"
          },
          "case_type": {
            "type": "string",
            "description": "The case type",
            "nullable": true
          },
          "case_number": {
            "type": "string",
            "description": "The case number",
            "nullable": true
          },
          "case_name": {
            "type": "string",
            "description": "The case name",
            "nullable": true
          },
          "status": {
            "description": "The current conference status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConferenceState"
              }
            ]
          },
          "participants": {
            "type": "array",
            "description": "The conference participants",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantForHostResponse"
            }
          },
          "number_of_endpoints": {
            "type": "integer",
            "description": "The number of video access endpoints for the hearing",
            "format": "int32"
          },
          "hearing_venue_is_scottish": {
            "type": "boolean",
            "description": "Flags true when hearing venue is in Scotland"
          }
        }
      },
      "ParticipantForHostResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The participant Id",
            "format": "guid"
          },
          "display_name": {
            "type": "string",
            "description": "The participant display name during a conference",
            "nullable": true
          },
          "role": {
            "description": "The participant role in conference",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ]
          },
          "representee": {
            "type": "string",
            "description": "The representee (if participant is a representative)",
            "nullable": true
          },
          "case_type_group": {
            "type": "string",
            "description": "The group a participant belongs to",
            "nullable": true
          },
          "hearing_role": {
            "type": "string",
            "description": "The participant hearing role in conference",
            "nullable": true
          }
        }
      },
      "ConferenceForIndividualResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Conference UUID",
            "format": "guid"
          },
          "scheduled_date_time": {
            "type": "string",
            "description": "Scheduled date time as UTC",
            "format": "date-time"
          },
          "case_number": {
            "type": "string",
            "description": "The case number",
            "nullable": true
          },
          "case_name": {
            "type": "string",
            "description": "The case name",
            "nullable": true
          },
          "status": {
            "description": "The current conference status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConferenceState"
              }
            ]
          },
          "closed_date_time": {
            "type": "string",
            "description": "The conference closed datetime",
            "format": "date-time",
            "nullable": true
          },
          "hearing_venue_is_scottish": {
            "type": "boolean",
            "description": "Flags true when hearing venue is in Scotland"
          }
        }
      },
      "ExpiredConferencesResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The conference's UUID",
            "format": "guid"
          },
          "current_status": {
            "description": "The current conference status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConferenceState"
              }
            ]
          },
          "hearing_id": {
            "type": "string",
            "description": "The hearing Id",
            "format": "guid"
          }
        }
      },
      "ParticipantInHearingResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The participant id",
            "format": "guid"
          },
          "conference_id": {
            "type": "string",
            "description": "The conference id",
            "format": "guid"
          },
          "username": {
            "type": "string",
            "description": "The participant username",
            "nullable": true
          },
          "status": {
            "description": "The current participant status",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ParticipantState"
              }
            ]
          },
          "user_role": {
            "description": "The participant role in conference",
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserRole"
              }
            ]
          },
          "case_group": {
            "type": "string",
            "description": "The group a participant belongs to",
            "nullable": true
          }
        }
      },
      "ConferenceHearingRoomsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hearing_id": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "file_name_prefix": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AnonymiseConferenceWithHearingIdsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hearing_ids": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "StartHearingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "layout": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HearingLayout"
              }
            ]
          },
          "participants_to_force_transfer": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "mute_guests": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "HearingLayout": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Dynamic",
          "OnePlus7",
          "TwoPlus21"
        ],
        "enum": [
          "Dynamic",
          "OnePlus7",
          "TwoPlus21"
        ]
      },
      "TransferParticipantRequest": {
        "type": "object",
        "description": "Transfer a witness in a hearing",
        "additionalProperties": false,
        "properties": {
          "participant_id": {
            "type": "string",
            "description": "Participant Id",
            "format": "guid",
            "nullable": true
          },
          "transfer_type": {
            "description": "Direction of transfer in regards to a conference",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TransferType"
              }
            ]
          }
        }
      },
      "TransferType": {
        "type": "string",
        "description": "List of directions a witness is transferred",
        "x-enumNames": [
          "Call",
          "Dismiss"
        ],
        "enum": [
          "Call",
          "Dismiss"
        ]
      },
      "ConsultationRequestResponse": {
        "type": "object",
        "description": "Request a private consultation with another participant",
        "additionalProperties": false,
        "properties": {
          "conference_id": {
            "type": "string",
            "description": "The conference UUID",
            "format": "guid"
          },
          "requested_by": {
            "type": "string",
            "description": "Requestor's UUID\nThis value can be empty is the consultation is requested by a VHO",
            "format": "guid"
          },
          "requested_for": {
            "type": "string",
            "description": "Requestee's UUID",
            "format": "guid"
          },
          "room_label": {
            "type": "string",
            "description": "The room to have a private consultation in",
            "nullable": true
          },
          "answer": {
            "description": "Response to a consultation request (i.e. 'Accepted or Rejected')",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConsultationAnswer"
              }
            ]
          }
        }
      },
      "ConsultationAnswer": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "Accepted",
          "Rejected"
        ],
        "enum": [
          "None",
          "Accepted",
          "Rejected"
        ]
      },
      "EndpointConsultationRequest": {
        "type": "object",
        "description": "Request a private consultation with a video endpoint",
        "additionalProperties": false,
        "properties": {
          "conference_id": {
            "type": "string",
            "description": "The conference UUID",
            "format": "guid"
          },
          "requested_by_id": {
            "type": "string",
            "description": "Defence Advocate or Judge or JOH's UUID",
            "format": "guid"
          },
          "endpoint_id": {
            "type": "string",
            "description": "Video Endpoint's UUID",
            "format": "guid"
          },
          "room_label": {
            "type": "string",
            "description": "The label / name of the room to lock/unlock",
            "nullable": true
          }
        }
      },
      "LockRoomRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "conference_id": {
            "type": "string",
            "description": "The conference UUID",
            "format": "guid"
          },
          "room_label": {
            "type": "string",
            "description": "The label / name of the room to lock/unlock",
            "nullable": true
          },
          "lock": {
            "type": "boolean",
            "description": "The lock state of the room"
          }
        }
      },
      "StartConsultationRequest": {
        "type": "object",
        "description": "Start a private consultation",
        "additionalProperties": false,
        "properties": {
          "conference_id": {
            "type": "string",
            "description": "The conference UUID",
            "format": "guid"
          },
          "room_type": {
            "description": "The room type number",
            "oneOf": [
              {
                "$ref": "#/components/schemas/VirtualCourtRoomType"
              }
            ]
          },
          "requested_by": {
            "type": "string",
            "description": "Requester's UUID",
            "format": "guid"
          }
        }
      },
      "VirtualCourtRoomType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "JudgeJOH",
          "Participant",
          "WaitingRoom",
          "Civilian",
          "Witness",
          "JudicialShared"
        ],
        "enum": [
          "JudgeJOH",
          "Participant",
          "WaitingRoom",
          "Civilian",
          "Witness",
          "JudicialShared"
        ]
      },
      "LeaveConsultationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "conference_id": {
            "type": "string",
            "format": "guid"
          },
          "participant_id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UpdateEndpointRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "defence_advocate": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "HealthCheckResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "database_health": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HealthCheck"
              }
            ]
          },
          "kinly_self_test_health": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HealthCheck"
              }
            ]
          },
          "kinly_api_health": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HealthCheck"
              }
            ]
          },
          "app_version": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ApplicationVersion"
              }
            ]
          },
          "wowza_health": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HealthCheck"
              }
            ]
          }
        }
      },
      "HealthCheck": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "successful": {
            "type": "boolean"
          },
          "error_message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IDictionary"
              }
            ]
          }
        }
      },
      "IDictionary": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "Item": {
            "nullable": true
          },
          "Keys": {
            "type": "array",
            "items": {}
          },
          "Values": {
            "type": "array",
            "items": {}
          },
          "IsReadOnly": {
            "type": "boolean"
          },
          "IsFixedSize": {
            "type": "boolean"
          }
        }
      },
      "ApplicationVersion": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "file_version": {
            "type": "string",
            "nullable": true
          },
          "information_version": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InstantMessageResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "from": {
            "type": "string",
            "nullable": true
          },
          "message_text": {
            "type": "string",
            "nullable": true
          },
          "time_stamp": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddInstantMessageRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "from": {
            "type": "string",
            "description": "Username of the sender",
            "nullable": true
          },
          "message_text": {
            "type": "string",
            "description": "Body of the chat message",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "Username of the receiver",
            "nullable": true
          }
        }
      },
      "ClosedConferencesResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The conference's UUID",
            "format": "guid"
          }
        }
      },
      "AddParticipantsToConferenceRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantRequest"
            }
          }
        }
      },
      "UpdateConferenceParticipantsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "existing_participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UpdateParticipantRequest"
            }
          },
          "new_participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ParticipantRequest"
            }
          },
          "removed_participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          },
          "linked_participants": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantRequest"
            }
          }
        }
      },
      "UpdateParticipantRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participant_ref_id": {
            "type": "string",
            "description": "Participant Ref Id\n            ",
            "format": "guid"
          },
          "fullname": {
            "type": "string",
            "description": "Participant Fullname\n            ",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "description": "Participant FirstName\n            ",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "Participant LastName\n            ",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "description": "Participant Display Name\n            ",
            "nullable": true
          },
          "representee": {
            "type": "string",
            "description": "Representee\n            ",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "description": "The participant contact email",
            "nullable": true
          },
          "contact_telephone": {
            "type": "string",
            "description": "The participant contact telephone",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "The participant username",
            "nullable": true
          },
          "linked_participants": {
            "type": "array",
            "description": "Linked participants",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LinkedParticipantRequest"
            }
          }
        }
      },
      "TestCallScoreResponse": {
        "type": "object",
        "description": "The score of a test call",
        "additionalProperties": false,
        "properties": {
          "score": {
            "description": "The score of the test call",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TestScore"
              }
            ]
          },
          "passed": {
            "type": "boolean",
            "description": "Whether or not the call was successful"
          }
        }
      },
      "TestScore": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Good",
          "Okay",
          "Bad"
        ],
        "enum": [
          "Good",
          "Okay",
          "Bad"
        ]
      },
      "ParticipantHeartbeatResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recent_packet_loss": {
            "type": "number",
            "format": "decimal"
          },
          "browser_name": {
            "type": "string",
            "nullable": true
          },
          "browser_version": {
            "type": "string",
            "nullable": true
          },
          "operating_system": {
            "type": "string",
            "nullable": true
          },
          "operating_system_version": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AddHeartbeatRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "outgoing_audio_percentage_lost": {
            "type": "number",
            "format": "decimal"
          },
          "outgoing_audio_percentage_lost_recent": {
            "type": "number",
            "format": "decimal"
          },
          "incoming_audio_percentage_lost": {
            "type": "number",
            "format": "decimal"
          },
          "incoming_audio_percentage_lost_recent": {
            "type": "number",
            "format": "decimal"
          },
          "outgoing_video_percentage_lost": {
            "type": "number",
            "format": "decimal"
          },
          "outgoing_video_percentage_lost_recent": {
            "type": "number",
            "format": "decimal"
          },
          "incoming_video_percentage_lost": {
            "type": "number",
            "format": "decimal"
          },
          "incoming_video_percentage_lost_recent": {
            "type": "number",
            "format": "decimal"
          },
          "browser_name": {
            "type": "string",
            "nullable": true
          },
          "browser_version": {
            "type": "string",
            "nullable": true
          },
          "operating_system": {
            "type": "string",
            "nullable": true
          },
          "operating_system_version": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "JudgeNameListResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "first_names": {
            "type": "array",
            "description": "List of Judge's first name",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AddStaffMemberResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participant_details": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ParticipantDetailsResponse"
              }
            ]
          },
          "conference_id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AddStaffMemberRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "nullable": true
          },
          "user_role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "hearing_role": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AnonymiseQuickLinkParticipantWithHearingIdsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hearing_ids": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "guid"
            }
          }
        }
      },
      "AddQuickLinkParticipantResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participant_details": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ParticipantDetailsResponse"
              }
            ]
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "conference_id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AddQuickLinkParticipantRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "user_role": {
            "$ref": "#/components/schemas/UserRole"
          }
        }
      },
      "PexipConfigResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pexip_self_test_node": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TaskResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "origin_id": {
            "type": "string",
            "format": "guid"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_by": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TaskType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Hearing",
          "Judge",
          "Participant"
        ],
        "enum": [
          "Hearing",
          "Judge",
          "Participant"
        ]
      },
      "TaskStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "ToDo",
          "Done"
        ],
        "enum": [
          "ToDo",
          "Done"
        ]
      },
      "UpdateTaskRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "updated_by": {
            "type": "string",
            "description": "The username of the person updating the alert",
            "nullable": true
          }
        }
      },
      "AddTaskRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "participant_id": {
            "type": "string",
            "description": "The participant Id",
            "format": "guid"
          },
          "body": {
            "type": "string",
            "description": "The alert text.",
            "nullable": true
          },
          "task_type": {
            "description": "The task type.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskType"
              }
            ]
          }
        }
      },
      "ConferenceEventRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Unique id to represent an event",
            "nullable": true
          },
          "event_type": {
            "description": "Type of an event",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EventType"
              }
            ]
          },
          "time_stamp_utc": {
            "type": "string",
            "description": "Timestamp when this event has occured (date time in utc).",
            "format": "date-time"
          },
          "conference_id": {
            "type": "string",
            "description": "Id of virtual court room (uuid).",
            "nullable": true
          },
          "participant_id": {
            "type": "string",
            "description": "Id of participant (uuid).",
            "nullable": true
          },
          "participant_room_id": {
            "type": "string",
            "description": "Id of participant room (uuid). This only applies to VMR events",
            "nullable": true
          },
          "transfer_from": {
            "type": "string",
            "description": "Room from where the participant is transferred from.",
            "nullable": true
          },
          "transfer_to": {
            "type": "string",
            "description": "Room to where the participant is transferred to.",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Event reason",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Can be either the phone number or \"anonymous\"",
            "nullable": true
          }
        }
      },
      "EventType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "Joined",
          "Disconnected",
          "Transfer",
          "Help",
          "Pause",
          "Close",
          "Leave",
          "Consultation",
          "MediaPermissionDenied",
          "ParticipantJoining",
          "SelfTestFailed",
          "Suspend",
          "VhoCall",
          "ParticipantNotSignedIn",
          "Start",
          "CountdownFinished",
          "EndpointJoined",
          "EndpointDisconnected",
          "EndpointTransfer",
          "ConnectingToEventHub",
          "SelectingMedia",
          "ConnectingToConference",
          "RoomParticipantJoined",
          "RoomParticipantDisconnected",
          "RoomParticipantTransfer"
        ],
        "enum": [
          "None",
          "Joined",
          "Disconnected",
          "Transfer",
          "Help",
          "Pause",
          "Close",
          "Leave",
          "Consultation",
          "MediaPermissionDenied",
          "ParticipantJoining",
          "SelfTestFailed",
          "Suspend",
          "VhoCall",
          "ParticipantNotSignedIn",
          "Start",
          "CountdownFinished",
          "EndpointJoined",
          "EndpointDisconnected",
          "EndpointTransfer",
          "ConnectingToEventHub",
          "SelectingMedia",
          "ConnectingToConference",
          "RoomParticipantJoined",
          "RoomParticipantDisconnected",
          "RoomParticipantTransfer"
        ]
      },
      "SharedParticipantRoomResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "label": {
            "type": "string",
            "description": "The room label",
            "nullable": true
          },
          "pexip_node": {
            "type": "string",
            "description": "The Pexip node",
            "nullable": true
          },
          "participant_join_uri": {
            "type": "string",
            "description": "The join uri for participants",
            "nullable": true
          },
          "room_type": {
            "description": "The type of VMR",
            "oneOf": [
              {
                "$ref": "#/components/schemas/VirtualCourtRoomType"
              }
            ]
          },
          "hearing_id": {
            "type": "string",
            "description": "Hearing Id",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ],
  "tags": [
    {
      "name": "Conference Management"
    }
  ]
}